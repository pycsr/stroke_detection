name: CI Pipeline
on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  train:
    name: Train Model
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: pip install -r requirements/requirements.txt
      - name: Train and save pipeline
        run: python stroke_detection_model/train_pipeline.py
      - uses: actions/upload-artifact@v2
        with:
          name: my-trained-pipeline
          path: stroke_detection_model/trained_models/*.pkl
          retention-days: 1

  test:
    name: Test Model
    runs-on: ubuntu-latest
    needs: [train]
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - uses: actions/download-artifact@v2
        with:
          name: my-trained-pipeline
          path: stroke_detection_model/trained_models
      - name: Install dependencies
        run: pip install -r requirements/test_requirements.txt
      - name: Test with pytest
        run: pytest

  black:
    name: black
    runs-on: ubuntu-latest
    needs: [train]
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install black
        run: pip install black
      - name: Run black module
        run: black ./

  pylint:
    name: pylint
    runs-on: ubuntu-latest
    needs: [train, black]
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install pylint
        run: pip install pylint
      - name: Run pylint module
        run: pylint ./ --ignore=__init__.py

  build:
    name: Build Package
    runs-on: ubuntu-latest
    needs: [train, test, black]
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - uses: actions/download-artifact@v2
        with:
          name: my-trained-pipeline
          path: stroke_detection_model/trained_models
      - name: Install dependencies
        run: pip install --upgrade build
      - name: Build package
        run: python -m build
      - uses: actions/upload-artifact@v2
        with:
          name: my-build-package
          path: dist/*.whl
          retention-days: 1

  push-image:
    name: Push Docker Image
    runs-on: ubuntu-latest
    needs: [train, test, black, pylint, build]
    steps:
      - name: Repo Checkout
        uses: actions/checkout@v4

      - uses: actions/download-artifact@v2
        with:
          name: my-build-package
          path: stroke_detection_model_api

      - name: Login to Docker hub
        env:
          DOCKER_USER: ${{ secrets.DOCKER_USER_NAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASS_TOKEN }}
        run: docker login -u $DOCKER_USER -p $DOCKER_PASSWORD 

      - name: Build the Docker image for bikeshare_model Fastapi app
        env:
          DOCKER_USER: ${{ secrets.DOCKER_USER_NAME }}
        run: docker build . -f Dockerfile -t $DOCKER_USER/stroke_detection_model_api:latest

      - name: Push the Docker Image
        env:
          DOCKER_USER: ${{ secrets.DOCKER_USER_NAME }}
        run: docker push $DOCKER_USER/stroke_detection_model_api

      - name: Logout to Docker hub
        run: docker logout
